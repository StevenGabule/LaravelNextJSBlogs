{"version":3,"sources":["webpack:///./resources/js/modules/auth/pages/login/Page.js","webpack:///./resources/js/modules/auth/pages/login/components/Form.js","webpack:///./resources/js/modules/auth/pages/login/index.js"],"names":["Page","props","name","value","errors","validator","setState","credentials","state","remove","validate","then","e","preventDefault","submit","ReeValidate","email","password","remember","$","attr","removeAttr","dispatch","login","error","statusCode","_","forOwn","message","field","add","isAuthenticated","handleChange","handleSubmit","Component","PropTypes","bool","isRequired","func","displayName","propTypes","string","Form","target","mapStateToProps","auth","connect"],"mappings":"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","file":"2.js","sourcesContent":["// import libs\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport $ from 'jquery'\nimport _ from 'lodash'\nimport { Redirect } from 'react-router-dom'\nimport { login } from '../../service'\nimport ReeValidate from 'ree-validate'\n\n// import components\nimport Form from './components/Form'\n\n// initialize component\nclass Page extends Component {\n    // set name of the component\n    static displayName = 'LoginPage'\n\n    // validate props\n    static propTypes = {\n        isAuthenticated: PropTypes.bool.isRequired,\n        dispatch: PropTypes.func.isRequired\n    }\n\n    constructor(props) {\n        super(props)\n\n        this.validator = new ReeValidate({\n            email: 'required|email',\n            password: 'required|min:6'\n        })\n\n        // set the state of the app\n        this.state = {\n            credentials: {\n                email: '',\n                password: '',\n                remember: false,\n            },\n            errors: this.validator.errors\n        }\n    }\n\n    // after mounting the component add a style to the body\n    componentDidMount() {\n        $('body').attr('style', 'background-color: #eee')\n    }\n\n    // remove body style before component leaves dom\n    componentWillUnmount() {\n        $('body').removeAttr('style')\n    }\n\n    // event to handle input change\n    handleChange = (name, value) => {\n        const { errors } = this.validator\n\n        this.setState({ credentials: { ...this.state.credentials, [name]: value } })\n\n        errors.remove(name)\n\n        this.validator.validate(name, value)\n            .then(() => {\n                this.setState({ errors })\n            })\n    }\n\n    // event to handle form submit\n    handleSubmit = e => {\n        e.preventDefault()\n        const { credentials } = this.state\n        const { errors } = this.validator\n\n        /*this.validator.validateAll(credentials)\n            .then((success) => {\n                if (success) {\n\n                } else {\n                    this.setState({ errors })\n                }\n            })*/\n        this.submit(credentials)\n    }\n\n    submit(credentials) {\n        this.props.dispatch(login(credentials))\n            .catch(({ error, statusCode }) => {\n                const { errors } = this.validator\n\n                if (statusCode === 422) {\n                    _.forOwn(error, (message, field) => {\n                        errors.add(field, message);\n                    });\n                } else if (statusCode === 401) {\n                    errors.add('password', error);\n                }\n\n                this.setState({ errors })\n            })\n    }\n\n    // render component\n    render() {\n\n        // check if user is authenticated then redirect him to home page\n        if (this.props.isAuthenticated) {\n            return <Redirect to=\"/\" />\n        }\n        const props = {\n            email: this.state.credentials.email,\n            password: this.state.credentials.password,\n            remember: this.state.credentials.remember,\n            handleChange: this.handleChange,\n            handleSubmit: this.handleSubmit,\n        }\n\n        return (<div className=\"container py-5\">\n            <div className=\"row\">\n                <div className=\"col-md-12\">\n                    <div className=\"row\">\n                        <div className=\"mx-auto\">\n                            <span className=\"anchor\"/>\n                            <div className=\"card has-shadow\">\n                                <div className=\"card-body\">\n                                    <Form {...props} />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>)\n    }\n}\n\nexport default Page\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\n\nconst displayName = 'LoginForm'\nconst propTypes = {\n    email: PropTypes.string,\n    password: PropTypes.string,\n    remember: PropTypes.bool,\n    handleSubmit: PropTypes.func.isRequired,\n    handleChange: PropTypes.func.isRequired,\n}\n\nconst Form = ({ email, password, remember, handleChange, handleSubmit }) => (\n    <form className=\"form\" role=\"form\" onSubmit={handleSubmit} noValidate>\n        <h2 className=\"card-title\">Please sign in</h2>\n        <div className=\"form-group\">\n            <label htmlFor=\"email\" className=\"sr-only\">Email</label>\n            <input type=\"text\"\n                   className={`form-control form-control-lg rounded-0}`}\n                   name=\"email\"\n                   id=\"email\"\n                   placeholder=\"Email address\"\n                   value={email || ''}\n                   onChange={e => handleChange(e.target.name, e.target.value)}\n                   required\n                   autoFocus/>\n        </div>\n\n        <div className=\"form-group\">\n            <label htmlFor=\"password\" className=\"sr-only\">Password</label>\n            <input type=\"password\"\n                   className={`form-control form-control-lg rounded-0}`}\n                   id=\"password\"\n                   name=\"password\"\n                   placeholder=\"Password\"\n                   value={password || ''}\n                   onChange={e => handleChange(e.target.name, e.target.value)}\n                   required/>\n        </div>\n\n        <div>\n            <label className=\"custom-control custom-checkbox\">\n                <input type=\"checkbox\"\n                       name=\"remember\"\n                       className=\"custom-control-input\"\n                       onChange={e => handleChange(e.target.name, !remember)}/>\n                <span className=\"custom-control-indicator\" />\n                <span className=\"custom-control-description small\">Remember me on this computer</span>\n            </label>\n        </div>\n\n        <button className=\"btn btn-lg btn-primary btn-block\"\n                type=\"submit\"\n                >Sign In</button>\n        <p>Not a member? <Link to='/register'>Signup here</Link></p>\n    </form>\n)\n\nForm.displayName = displayName\nForm.propTypes = propTypes\n\nexport default Form\n","// import libs\nimport { connect } from 'react-redux'\n\n// import components\nimport Page from './Page'\n\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n    }\n}\n\nexport default connect(mapStateToProps)(Page)\n"],"sourceRoot":""}